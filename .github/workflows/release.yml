name: Release

on:
  workflow_dispatch:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

env: 
  node_version: 22

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write
      packages: write

    outputs:
      hasChanges: ${{ steps.changesets.outputs.hasChanges }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ env.node_version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node_version }}
          registry-url: 'https://npm.pkg.github.com'

      - uses: pnpm/action-setup@v4
      
      - name: Install Dependencies
        run: pnpm i

      - name: Check for changesets
        id: changesets
        # currently doesn't work correctly, see https://github.com/changesets/changesets/issues/1036
        # old check: pnpm run version:hasChanges
        run: |
          if [ $(ls .changeset/*.md | wc -l) -eq 1 ]; then
            echo "No changesets found."
            echo "hasChanges=false" >> $GITHUB_OUTPUT
          else
            echo "New changesets has been found."
            echo "hasChanges=true" >> $GITHUB_OUTPUT
          fi

      - name: Build
        if: steps.changesets.outputs.hasChanges == 'true'
        run: pnpm build

      - name: Setup git user info
        run: | 
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"   

      - name: Publish to GitHub Packages
        if: steps.changesets.outputs.hasChanges == 'true'
        run: |
          pnpm run version:bump
          pnpm ci:publish
          git push --follow-tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-notes:
      name: Release Notes
      needs: release
      runs-on: ubuntu-latest
      if: needs.release.outputs.hasChanges == 'true'

      permissions:
        contents: write

      steps:
        - name: Get latest tag
          id: latest_tag
          run: |
            git fetch --tags
            echo "latest_tag=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT

        - name: Create release
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            tag: ${{ steps.latest_tag.outputs.latest_tag }}
          run: |
            gh release create "${{ steps.latest_tag.outputs.latest_tag }}" \
                --repo="$GITHUB_REPOSITORY" \
                --title="Release for ${{ steps.latest_tag.outputs.latest_tag }}" \
                --generate-notes