name: Release

on:
  workflow_call:
    inputs:
      node_version:
        description: Node.js version to use
        required: false
        type: string
        default: '22'
      pre_release:
        description: Is this a pre-release
        required: true
        type: boolean

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    outputs:
      hasChanges: ${{ steps.changesets.outputs.hasChanges }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Check for changesets
        id: changesets
        uses: ./.github/actions/has-changesets

      - name: Setup Node.js ${{ inputs.node_version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node_version }}
          registry-url: 'https://npm.pkg.github.com'

      - uses: pnpm/action-setup@v4
      
      - name: Install Dependencies
        run: pnpm install

      - name: Build
        if: steps.changesets.outputs.has_changes == 'true'
        run: pnpm build

      - name: Setup git user info
        uses: ./.github/actions/git-user-info

      - name: Prepare pre-release
        if: steps.changesets.outputs.has_changes == 'true'
        uses: ./.github/actions/setup-changeset-pre-release
        with:
          is_pre_release: ${{ inputs.pre_release }} == 'true'

      - name: Publish to GitHub Packages
        if: steps.changesets.outputs.has_changes == 'true'
        run: |
          pnpm run version:bump
          pnpm ci:publish
          git push --follow-tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare post pre-release
        if: steps.changesets.outputs.has_changes == 'true'
        uses: ./.github/actions/setup-changeset-pre-release
        with:
          is_pre_release: ${{ inputs.pre_release }} == 'false'

  release-notes:
      name: Release Notes
      needs: release
      runs-on: ubuntu-latest
      if: needs.release.outputs.hasChanges == 'true'

      permissions:
        contents: write

      steps:
        - name: Checkout Repo
          uses: actions/checkout@v4

        - name: Fetch tags
          run: git fetch --tags

        - name: Get latest tag
          id: tag
          run: echo "latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1))" >> $GITHUB_OUTPUT

        - name: Create release
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            tag: ${{ steps.tag.outputs.latest_tag }}
            pre_release: ${{ inputs.pre_release }}
          run: |
            if [ "${{ inputs.pre_release }}" == "true" ]; then
              gh release create $tag \
                  --repo="$GITHUB_REPOSITORY" \
                  --title="Pre-release for $tag" \
                  --prerelease \
                  --generate-notes
            else
              gh release create $tag \
                  --repo="$GITHUB_REPOSITORY" \
                  --title="Release for $tag" \
                  --generate-notes